/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.ac.cardiffmet.st20128572.timeline;

import java.awt.event.WindowEvent;
import java.text.ParseException;
import java.util.GregorianCalendar;
import javax.swing.JScrollPane;
import javax.swing.table.TableModel;

/**
 *
 * @author John
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    
    static MainMenu m = new MainMenu();
    
    public MainMenu() 
    {
       
        initComponents();
    }
    
    public MainMenu(String frameTitle)
    {
        initComponents();
        setTitle(frameTitle);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        Data d = new Data();
        PeopleTableModel pmodel = new PeopleTableModel();
        peopleTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        EventTableModel emodel = new EventTableModel();
        eventTable = new javax.swing.JTable();
        addPerson = new javax.swing.JButton();
        addEvent = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        timelinePanel = new Timeline();
        btnPanel = new ButtonPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wibbly Wobbly Timeline");
        setResizable(false);

        //DefaultTableModel tableModel = (javax.swing.table.DefaultTableModel).jTable1.getModel();
        peopleTable.setModel(pmodel);
        peopleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peopleTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                peopleTableMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(peopleTable);

        jTabbedPane1.addTab("People", jScrollPane2);

        eventTable.setModel(emodel
        );
        eventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(eventTable);

        jTabbedPane1.addTab("Events", jScrollPane3);

        addPerson.setText("Add Person");
        addPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPersonActionPerformed(evt);
            }
        });

        addEvent.setText("Add Event");
        addEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventActionPerformed(evt);
            }
        });

        timelinePanel.setPreferredSize(new java.awt.Dimension(600, 300));

        timelinePanel.setBackground(java.awt.Color.white);
        timelinePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        timelinePanel.setLayout(new javax.swing.BoxLayout(timelinePanel, 1));

        javax.swing.GroupLayout btnPanelLayout = new javax.swing.GroupLayout(btnPanel);
        btnPanel.setLayout(btnPanelLayout);
        btnPanelLayout.setHorizontalGroup(
            btnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        btnPanelLayout.setVerticalGroup(
            btnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout timelinePanelLayout = new javax.swing.GroupLayout(timelinePanel);
        timelinePanel.setLayout(timelinePanelLayout);
        timelinePanelLayout.setHorizontalGroup(
            timelinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timelinePanelLayout.createSequentialGroup()
                .addComponent(btnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 508, Short.MAX_VALUE))
        );
        timelinePanelLayout.setVerticalGroup(
            timelinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timelinePanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(btnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        JScrollPane scroll = new JScrollPane(timelinePanel, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

        this.add(scroll);

        jScrollPane1.setViewportView(timelinePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(addPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPerson, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(addEvent, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPersonActionPerformed
        Person p = new Person("");
        p.displayBio(p);
        peopleTable.dispatchEvent(new WindowEvent(m, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_addPersonActionPerformed

    private void peopleTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peopleTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_peopleTableMouseEntered

    private void addEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventActionPerformed
        Event e = new Event("");
        e.displayEvent(e);
        
    }//GEN-LAST:event_addEventActionPerformed

    private void peopleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peopleTableMouseClicked
       int index = peopleTable.getSelectedRow();
       
       TableModel model = peopleTable.getModel();
       
       String name = model.getValueAt(index, 0).toString();
       String dateStr = model.getValueAt(index,1).toString();
       
       GregorianCalendar dob;
        try 
        {
            dob = fromString(dateStr);
            
        }
        
        catch (ParseException ex) 
        {
            dob = new GregorianCalendar(1970,00,01);
        }
       String desc = model.getValueAt(index,2).toString();
       String role = model.getValueAt(index,3).toString();
       
       Person p = new Person(name, dob, desc, role);
       Bio b = new Bio(p);
       b.run();
    }//GEN-LAST:event_peopleTableMouseClicked

    private void eventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventTableMouseClicked
        int index = eventTable.getSelectedRow();
       
       TableModel model = eventTable.getModel();
       
       String name = model.getValueAt(index, 0).toString();
       String dateStr = model.getValueAt(index,1).toString();
       
       GregorianCalendar date;
        try 
        {
            date = fromString(dateStr);
            
        }
        
        catch (ParseException ex) 
        {
            date = new GregorianCalendar(1970,00,01);
        }
       String desc = model.getValueAt(index,2).toString();
       //String people = model.getValueAt(index,3).toString();
       
       Event e = new Event(name, date, desc, null);
       EventViewer ev = new EventViewer(e);
       ev.run();
    }//GEN-LAST:event_eventTableMouseClicked
   
    public GregorianCalendar fromString(String date) throws ParseException
    {
        String[] parts = date.split("-");
        int day = Integer.parseInt(parts[0]);
        int month = convertMonth(parts[1]);
        int year = Integer.parseInt(parts[2]);
        
        return new GregorianCalendar(year, month, day);
    }
    
    public int convertMonth(String month)
    {
        int newMonth;
        
        switch(month)
        {
            case "Jan": newMonth = 0;
            break;
            case "Feb": newMonth = 1;
            break;
            case "Mar": newMonth = 2;
            break;
            case "Apr": newMonth = 3;
            break;
            case "May": newMonth = 4;
            break;
            case "Jun": newMonth = 5;
            break;
            case "Jul": newMonth = 6;
            break;
            case "Aug": newMonth = 7;
            break;
            case "Sep": newMonth = 8;
            break;
            case "Oct": newMonth = 9;
            break;
            case "Nov": newMonth = 10;
            break;
            case "Dec": newMonth = 11;
            break;
            
            default: newMonth = 0;
        }
        
        return newMonth;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu("Wibbly Wobbly Timeline").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEvent;
    private javax.swing.JButton addPerson;
    public static javax.swing.JPanel btnPanel;
    public static javax.swing.JTable eventTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable peopleTable;
    public static javax.swing.JPanel timelinePanel;
    // End of variables declaration//GEN-END:variables
}
