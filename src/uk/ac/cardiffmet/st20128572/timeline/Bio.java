/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.ac.cardiffmet.st20128572.timeline;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.jdom2.JDOMException;
/**
 * Creates a GUI form that displays a selected Person or a new Person.
 * This form can be used to display and create a new Person depending on the parameters passed.
 * To create a new Person simply pass a a Person object with a single empty String parameter.
 * 
 * @author John
 */
public class Bio extends javax.swing.JFrame {

    Person p;
    /**
     * Creates new form Bio
     * @param p = Person object to be displayed
     */
    public Bio(Person p) 
    {
        this.p = p;
        
        
        
        initComponents();
        addBtn.setVisible(false);
        cancelBtn.setVisible(false);
        name.setText(p.getName());
        role.setText(p.getRole());
        description.setText(p.getDescription());
        dob.setText(p.getDOB());
        setTitle(p.getName());
        
        /*
        To create a new Person and the Person object passed has an empty name String. This hides the edit buttons
        */
        if("".equals(p.getName()))
        {
            editName.setVisible(false);
            editDOB.setVisible(false);
            editRole.setVisible(false);
            editDesc.setVisible(false);
       
            addBtn.setVisible(true);
            cancelBtn.setVisible(true);
        }
        
    }
    
    /**
     * 
     * @param date String date to convert to Gregorian Calendar format
     * @return Gregorian Calendar formatted date.
     * @throws ParseException If date cannot be converted to an integer. 
     */
    
    public GregorianCalendar fromString(String date) throws ParseException
    {
        String[] parts = date.split("-");
        int day = Integer.parseInt(parts[0]);
        int month = convertMonth(parts[1]);
        int year = Integer.parseInt(parts[2]);
        
        return new GregorianCalendar(year, month, day);
    }
    
    /**
     * Converts Gregorian Calendar formatted date to a String version.
     * @param date Gregorian Calendar formatted date
     * @return String version of date
     */
    public String dateToString(GregorianCalendar date)
    {
        Date d = date.getTime();
        DateFormat df = DateFormat.getDateInstance();
        String dateS = df.format(d);
        return dateS;
    }
    
    /**
     * Converts the String version of month to an integer version e.g - Jan is converted to 1.
     * @param month Month to be converted
     * @return Integer version of month
     */
    public int convertMonth(String month)
    {
        int newMonth;
        
        switch(month)
        {
            
            case "Jan": newMonth = 0;
            break;
            case "Feb": newMonth = 1;
            break;
            case "Mar": newMonth = 2;
            break;
            case "Apr": newMonth = 3;
            break;
            case "May": newMonth = 4;
            break;
            case "Jun": newMonth = 5;
            break;
            case "Jul": newMonth = 6;
            break;
            case "Aug": newMonth = 7;
            break;
            case "Sep": newMonth = 8;
            break;
            case "Oct": newMonth = 9;
            break;
            case "Nov": newMonth = 10;
            break;
            case "Dec": newMonth = 11;
            break;
            default: newMonth = 0;
        }
        
        return newMonth;
    }
            /**
             * Creates a new instance of Bio and displays it on screen.
             */
            public void run() 
            {
                new Bio(p).setVisible(true);
            }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dob = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        role = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        editName = new javax.swing.JButton();
        editDOB = new javax.swing.JButton();
        editRole = new javax.swing.JButton();
        editDesc = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Biography of ");

        name.setText("jTextField1");
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel2.setText("Date of Birth");

        dob.setText("jTextField1");
        dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobActionPerformed(evt);
            }
        });

        jLabel3.setText("Description");

        role.setText("jTextField1");
        role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleActionPerformed(evt);
            }
        });

        jLabel4.setText("Role");

        description.setColumns(20);
        description.setLineWrap(true);
        description.setRows(5);
        description.setWrapStyleWord(true);
        jScrollPane1.setViewportView(description);

        editName.setText("Edit");

        editDOB.setText("Edit");

        editRole.setText("Edit");

        editDesc.setText("Edit");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(role, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editRole))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editDOB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editName))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(editDesc)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDOB))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editRole))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobActionPerformed

    private void roleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleActionPerformed
    /**
     * Creates a new object of Person from the values provided by the user. The new person is added to data file, the array and resets the Person GUI table within the main menu
     * @param evt The event listener
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        boolean isSuccess = true;
        String newDescription = description.getText(); //get the description supplied by the user
        GregorianCalendar newDOB = new GregorianCalendar(1970,1,1); //set the date of birth a default value for DOB as a precaution if the date will not convert
        String newName = name.getText(); //get the name supplied by the user
        String newRole = role.getText(); //get the role supplied by the user
        
        try 
        {
            newDOB = fromString(dob.getText()); //attempt to convert the date of birth supplied into a Gregorian Calendar format
        }
        catch (ParseException ex) //if date of birth cannot be converted
        {
            isSuccess = false;
            //ErrorMessage errorMessage = new ErrorMessage("Provided date format is invalid.");
            //errorMessage.setVisible(true);
            Logger.getLogger(Bio.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        
        if(isSuccess)
        {
            Data d = new Data(); //create new instance of Data to access the arrays
            XMLReadWrite x = new XMLReadWrite(); //create new instance of XMLReadWrite to write to XML file

            d.addToArray(d.people, newDescription, newDOB, newName, newRole);  //add to the Person array
            
            try //attempt to write to the People XML file
            {
                x.writePeopleXML(newDescription, dateToString(newDOB), newName, newRole);
            }
            catch (JDOMException | IOException ex) //if Person cannot be written to the XML file 
            {
                Logger.getLogger(Bio.class.getName()).log(Level.SEVERE, null, ex); //display a Logger error
            }

            PeopleTableModel model = new PeopleTableModel();
            MainMenu.peopleTable.setModel(model); //update the People table
            PersonRenderer renderer = new PersonRenderer();


            DefaultListModel newModel = AddPersonToEvent.updateModel(); //update the People list model

            AddPersonToEvent.jList1.setModel(newModel); //set the newModel to the JList instance in AddPersonToEvent GUI form


            this.dispose(); //close this window
        }
    }//GEN-LAST:event_addBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addBtn;
    public javax.swing.JButton cancelBtn;
    private javax.swing.JTextArea description;
    private javax.swing.JTextField dob;
    public javax.swing.JButton editDOB;
    public javax.swing.JButton editDesc;
    public javax.swing.JButton editName;
    public javax.swing.JButton editRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField role;
    // End of variables declaration//GEN-END:variables
}
